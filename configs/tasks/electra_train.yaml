ELECTRATrain:
  _target_: chess_gnn.tasks.ELECTRATrain
  model:
    _target_: chess_gnn.models.ChessELECTRA
    bert:
      _target_: chess_gnn.models.ChessBERT
      num_layers: 6
      block:
        _target_: chess_gnn.bert.TransformerBlock
        pos_emb_mode: "learned"
        hidden: 256
        attn_heads: 8
        feed_forward_hidden: 512
        norm_factory:
          _target_: chess_gnn.bert.utils.LayerNormFactory
      tokenizer:
        _target_: chess_gnn.tokenizers.SimpleChessTokenizer
      mask_handler:
        _target_: chess_gnn.bert.BERTMaskHandler
        mask_prob: 0.50
      loss_weights:
        _target_: chess_gnn.models.BERTLossWeights
        masking: 1.0
        win_prediction: 1.0
    discriminator:
      _target_: chess_gnn.models.ChessDiscriminator
      num_layers: 12
      block:
        _target_: chess_gnn.bert.TransformerBlock
        pos_emb_mode: "learned"
        hidden: 384
        attn_heads: 8
        feed_forward_hidden: 768
        norm_factory:
          _target_: chess_gnn.bert.utils.LayerNormFactory
    mask_handler:
      _target_: chess_gnn.bert.ElectraMaskHandler
      mask_prob: 0.40
    loss_weights:
      _target_: chess_gnn.models.ELECTRALossWeights
      mlm: 1.0
      discriminator: 2.0
    optimizer_factory:
      _target_: chess_gnn.optimizers.LambFactory
      learning_rate: 5e-4
      weight_decay: 1e-5
    lr_scheduler_factory:
      _target_: chess_gnn.schedules.CosineAnnealingWarmupFactory
      T_0: 10000
      T_mult: 2
      warmup_steps: 1000
  datamodule:
    _target_: chess_gnn.data.ChessDataModule
    data_directory: '/home/ray/datasets/chess/lumbras_2024'
    batch_size: 1024
    num_workers: 8
    mode: 'ssl'
  trainer_factory:
    _target_: chess_gnn.trainer.TrainerFactory
    log_every_n_steps: 100
    max_epochs: 3
    accelerator: 'auto'
    strategy: 'ddp_find_unused_parameters_true'
    devices: 1
    precision: "bf16-mixed"
    val_check_interval: 10_000
    num_sanity_val_steps: 1
    callbacks:
      - _target_: pytorch_lightning.callbacks.TQDMProgressBar
      - _target_: pytorch_lightning.callbacks.LearningRateMonitor
        logging_interval: 'step'
      - _target_: pytorch_lightning.callbacks.ModelCheckpoint
        _partial_: True
        save_last: True
        every_n_train_steps: 5000
